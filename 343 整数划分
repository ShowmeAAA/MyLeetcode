/*****************************/
LeetCode343 整数划分
动态规划
/*****************************/

/*思路
本题是组合问题求最优值
本题最优值为最大值，所以dp数组表示的就是按原方法划分的最大值。
本题规模为整数n，所以缩小规模：原问题为n，子问题就是i。(i < n)

将i拆分为至少两个正整数的和，并使这些整数的乘积最大化。
dp[i]表示获得的最大乘积

后来因为dp[i]必须以其他结合，所以：
将i拆分为一个或多个正整数的和，并使这些整数的乘积最大化。 
dp[i]表示获得的最大乘积
*/

int integerBreak(int n) 
{
    if (n <= 2)
        return 1;
    if (n == 3)
        return 2;
    
    int* dp = (int*)malloc(sizeof(int) * (n + 1));
    int i;
    int k;
    int max;
   
    //将i拆分为一个或多个正整数的和，并使这些整数的乘积最大化。 
    //dp[i]表示获得的最大乘积
    dp[1] = 1;
    dp[2] = 2;
    dp[3] = 3;
    
    for (i = 4; i <= n; i ++)
    {
        max = i;
        for (k = 1; k < i; k ++)
        {
            if (max < k * dp[i - k])
                max = k * dp[i - k];
        }
        dp[i] = max;
    }
    
    return dp[n];
}
